buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.3.0"
group = "com.noobanidus.superflatcaves"
archivesBaseName = "superflatcaves"

sourceCompatibility = targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

minecraft {
    version = "1.12.2-14.23.5.2815"
    runDir = "run"
    mappings = "stable_39"
    useDepAts = true

    replace "GRADLE:VERSION", project.version
}

jar {
    manifest {
        attributes 'FMLAT': 'superflat_at.cfg'
    }
}

runClient {
    args '--username', 'caving'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = "deobf"
}

artifacts {
    archives deobfJar
}

repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        url "http://maven.blamejared.com"
    }
    maven {
        url "http://maven.covers1624.net/"
    }
    maven {
        url "http://chickenbones.net/maven/"
    }
    maven {
        url "http://www.ryanliptak.com/maven/"
    }
    maven {
        url "https://maven.chaosfield.at/"
    }
    maven {
        url "http://maven.ic2.player.to/"
    }
    maven {
        url "http://maven.tterrag.com"
    }
    maven {
        url "https://dl.bintray.com/raoulvdberge/dev/"
    }
    maven {
        url = "http://maven.thiakil.com"
    }
    maven {
        url "http://tehnut.info/maven/"
    }
    ivy {
        name = 'lunatrius\' ivy repo'
        url 'http://mc.lunatri.us/files'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    deobfCompile 'void-island-control:voidislandcontrol:1.5.3'
    deobfCompile 'cave-generator:CaveGenerator:0.14'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mc_version': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+at\\.cfg)', 'META-INF/$1'
}

String getCN() {
    def firsts = ['Donald', 'Lex', 'Mike', 'Arthur', 'Bridget', 'Dorian', 'Ford', 'Guy', 'James', 'Jessica', 'John', 'Michael', 'Robinson', 'Zaphod', 'Bell', 'Penelope']
    def lasts = ['Duck', 'Luthor', 'Meyers', 'Dent', 'Jones', 'Gray', 'Prefect', 'Montag', 'Moriarty', 'Rabbit', 'Watson', 'Smith', 'Corleone', 'Crusoe', 'Beeblebrox', 'Cranel', 'Akk']
    def rand = new Random()
    return firsts[rand.nextInt(firsts.size())] + ' ' + lasts[rand.nextInt(lasts.size())]
}

task mkKeyStore(type:Exec) {
   workingDir projectDir
   commandLine 'keytool', '-genkey', '-alias', 'signFiles', '-keystore', 'kstore.jks', '-storepass', '123456', '-noprompt', '-dname', 'CN='+getCN(), '-keypass', '123456'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    inputFile = jar.archivePath
    outputFile = jar.archivePath
    keyStore = 'kstore.jks'
    alias = 'signFiles'
    storePass = '123456'
    keyPass = '123456'
}

task rmKeyStore(type: Delete) {
  delete 'kstore.jks'
}

build.dependsOn rmKeyStore
rmKeyStore.dependsOn signJar
signJar.dependsOn mkKeyStore
